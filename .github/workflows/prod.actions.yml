name: Hako prive frontend - prod
on:
  push:
    branches:
      - 'release/**'
jobs:
  docker-build:
    runs-on: hako-default
    # runs-on: ubuntu-20.04
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "ðŸ”Ž The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_PROD_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_PROD_ECR_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ch-prive-fe
          IMAGE_TAG: ${{ github.run_number }}-${{ steps.vars.outputs.sha_short }}
        run: |
          # Build a docker container and push it to ECR

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "::set-output name=image_tag::$ECR_REPOSITORY:$IMAGE_TAG"
      

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: success()
        env:
          SLACK_WEBHOOK: ${{ secrets.CI_SLACK_NOTI_WEBHOOK }}
          SLACK_CHANNEL: cicd-alerts-prod-ch-prive
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_FOOTER: Coinhako
          SLACK_USERNAME: ch-prive-frontend
          SLACK_TITLE: Build success
          SLACK_MESSAGE: |
            Docker image: ${{ steps.build-image.outputs.image_tag }}
            Commit message: ${{ github.event.head_commit.message }}

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: failure()
        env:
          SLACK_WEBHOOK: ${{ secrets.CI_SLACK_NOTI_WEBHOOK }}
          SLACK_CHANNEL: cicd-alerts-prod-ch-prive
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_FOOTER: Coinhako
          SLACK_USERNAME: ch-prive-frontend
          SLACK_TITLE: Build failure
          SLACK_MESSAGE: |
            Commit message: ${{ github.event.head_commit.message }}
